{"version":3,"sources":["logo.svg","components/story.js","components/welcome.js","components/home.js","components/menu.js","App.js","serviceWorker.js","index.js","firebase.js"],"names":["module","exports","__webpack_require__","p","Story","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setStory","state","game","story","storyString","_i","_Object$values","values","length","value","setState","console","log","addToStory","gameId","addWord","name","currentInput","handleInput","e","data","inverted","creating","_this2","firebaseRef","child","on","snapshot","json","val","_this3","react_default","a","createElement","Segment","Form","Field","fluid","Input","placeholder","className","onChange","Button","animated","color","onClick","Content","visible","hidden","Icon","style","marginTop","Divider","raised","Grid","columns","relaxed","Column","users","map","index","key","vertical","Component","Welcome","handleGameId","handleName","submit","type","setGameValues","alert","stackable","textAlign","Row","verticalAlign","Header","icon","Home","toggleTheme","prevState","gameIdUncleaned","getGameData","setGameId","once","createNewGame","createUser","createGame","then","catch","err","Container","minHeight","welcome_Welcome","story_Story","Radio","toggle","label","MenuBar","refreshPage","window","location","reload","openModal","modal","closeModal","Menu","size","Item","position","Modal","open","onClose","Description","App","menu_MenuBar","home_Home","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","firebase","require","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","databaseRef","database","ref","pushToFirebase","req","res","query","push","set","item","send","Promise","resolve","reject","players","turn","0","error","user","dataSnapshot","dataJson","currentId","parseInt","message","word","words","getGame","gamePath"],"mappings":"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","file":"static/js/main.29851db8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport { createUser, addWord, firebaseRef, createGame, getGame } from '../firebase';\nimport { Button, Container, Divider, Form, Grid, Icon, Input, Segment, Radio } from 'semantic-ui-react';\n\nexport default class Story extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            inverted: this.props.inverted,\n            game: {},\n            story: \"\",\n            currentInput: \"\",\n        };\n\n        this.creating = false; // game creation in progress\n    }\n\n    componentDidMount() {\n        // listen to database updates and update state accordingly\n        firebaseRef.child(\"games\").on('value', (snapshot) => {\n            let json = snapshot.val();\n            console.log(json);\n            console.log(this.props.gameId);\n            console.log(json[this.props.gameId]);\n            this.setState({ game: json[this.props.gameId] }, this.setStory);\n        });\n    }\n\n    setStory = () => {\n        // append array of words into a single \"story\" string\n        if (this.state.game && this.state.game.story) {\n            let story = this.state.game.story;\n            let storyString = \"\";\n            for (let word of Object.values(story)) {\n                storyString += word.value + \" \";\n            }\n            this.setState({ story: storyString }, () => console.log(this.state.story));\n        }\n    }\n\n    addToStory = () => {\n        console.log(this.props.gameId);\n        addWord(this.props.gameId, this.props.name, this.state.currentInput); //\"-Ll2kMaVAN7LeHFGpO8f\"\n        this.setState({ currentInput: '' });\n    }\n\n    handleInput = (e, data) => this.setState({ currentInput: data.value });\n    // startGame = () => this.setState({ started: true });\n\n    render() {\n        console.log(this.state);\n        return (\n            <Segment inverted={this.props.inverted}>\n                <Form>\n                    <Form.Field fluid>\n                        <Input placeholder='Enter a word...' className=\"margin\" onChange={this.handleInput} value={this.state.currentInput} />\n                    </Form.Field>\n                    <Button animated inverted color='blue' onClick={this.addToStory}>\n                        <Button.Content visible>Add</Button.Content>\n                        <Button.Content hidden>\n                            <Icon name='arrow right' />\n                        </Button.Content>\n                    </Button>\n                </Form>\n                <p style={{ marginTop: \"1em\" }}>\n                    {this.state.story}\n                </p>\n                <Divider hidden/>\n                <Segment raised>\n                    <Grid columns={2} relaxed='very'>\n                        <Grid.Column>\n                            <p>Players: </p>\n                            <ul>\n                                {this.state.game && this.state.game.users ?\n                                    this.state.game.users.map((value, index) => {\n                                        return <li key={index}>{value.name === this.props.name ? value.name + \" (You)\" : value.name}</li>\n                                    })\n                                    :\n                                    <li>None</li>\n                                }\n                            </ul>\n                        </Grid.Column>\n                        <Grid.Column>\n                           <p>Game id:</p>\n                           <ul>\n                               <li>{this.props.gameId}</li>\n                           </ul>\n                        </Grid.Column>\n                    </Grid>\n\n                    <Divider vertical hidden />\n                </Segment>\n                {/* <p style={{ marginTop: \"1em\" }}>\n                        Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor.\n                        Aenean massa strong. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur\n                        ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla\n                        consequat massa quis enim. Donec pede justo, fringilla vel, aliquet nec, vulputate eget, arcu.\n                        In enim justo, rhoncus ut, imperdiet a, venenatis vitae, justo. Nullam dictum felis eu pede\n                        link mollis pretium. Integer tincidunt. Cras dapibus. Vivamus elementum semper nisi. Aenean\n                        vulputate eleifend tellus. Aenean leo ligula, porttitor eu, consequat vitae, eleifend ac,\n                        enim. Aliquam lorem ante, dapibus in, viverra quis, feugiat a, tellus. Phasellus viverra nulla\n                        ut metus varius laoreet. Quisque rutrum. Aenean imperdiet. Etiam ultricies nisi vel augue.\n                        Curabitur ullamcorper ultricies nisi.\n                    </p> */}\n            </Segment>\n        );\n    }\n}\n","import React, { Component } from 'react';\n// import ReactCSSTransitionGroup from 'react-addons-css-transition-group';\nimport { getFirebase, addWord, firebaseRef } from '../firebase';\nimport { Button, Container, Divider, Form, Grid, Header, Icon, Input, Search, Segment, Radio } from 'semantic-ui-react';\nimport '../animations.css';\n\nexport default class Welcome extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            inverted: this.props.inverted,\n            gameId: \"\",\n            name: \"\"\n        };\n    }\n\n    handleGameId = (e, data) => this.setState({ gameId: data.value });\n    handleName = (e, data) => this.setState({ name: data.value });\n    submit = (type) => {\n        if (type == \"create\") {\n            if (this.state.name != \"\") this.props.setGameValues(this.state.gameId, this.state.name);\n            else alert(\"please enter your name\");\n        } else if (type == \"join\") {\n            if (this.state.name != \"\" && this.state.gameId != \"\") this.props.setGameValues(this.state.gameId, this.state.name);\n            else alert(\"Please enter a game id and your name\");\n        }\n    }\n\n    render() {\n        return (\n            <Segment inverted={this.props.inverted}>\n                <Grid columns={2} stackable textAlign='center'>\n                    <Divider vertical inverted={this.props.inverted}>Or</Divider>\n\n                    <Grid.Row verticalAlign='middle'>\n                        <Grid.Column>\n                            <Header icon inverted={this.props.inverted}>\n                                <Icon name='search' />\n                                Join an Existing Game\n                            </Header>\n                            <Form>\n                                <Form.Field fluid>\n                                    <Input placeholder='Enter game id' className=\"margin\" onChange={this.handleGameId} value={this.state.gameId} />\n                                </Form.Field>\n                                <Form.Field fluid>\n                                    <Input placeholder='Enter name' className=\"margin\" onChange={this.handleName} value={this.state.name} />\n                                </Form.Field>\n                                <Button animated inverted color='blue' onClick={() => this.submit(\"join\")}>\n                                    <Button.Content visible>Join</Button.Content>\n                                    <Button.Content hidden>\n                                        <Icon name='arrow right' />\n                                    </Button.Content>\n                                </Button>\n                            </Form>\n                        </Grid.Column>\n\n                        <Grid.Column>\n                            <Header icon inverted={this.props.inverted}>\n                                <Icon name='world' />\n                                Create A New Game\n                            </Header>\n                            <Form>\n                                <Form.Field fluid>\n                                    <Input placeholder='Enter name' className=\"margin\" onChange={this.handleName} value={this.state.name} />\n                                </Form.Field>\n                                <Button animated inverted color='blue' onClick={() => this.submit(\"create\")}>\n                                    <Button.Content visible>Create</Button.Content>\n                                    <Button.Content hidden>\n                                        <Icon name='arrow right' />\n                                    </Button.Content>\n                                </Button>\n                            </Form>\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n            </Segment>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport Story from './story';\nimport Welcome from './welcome';\nimport { createGame, createUser, getFirebase, getGame, addWord, firebaseRef } from '../firebase';\nimport { Container, Grid, Radio } from 'semantic-ui-react';\n\nexport default class Home extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            inverted: false,\n            game: null,\n            story: \"\",\n            gameId: null,\n            name: \"\",\n        };\n    }\n\n    // componentDidMount() {\n    //     // getFirebase()  -- from ../api, \"proxy\": \"http://localhost:8000\"\n    //     //     .then((res) => {\n    //     //         return res.json();\n    //     //     })\n    //     //     .then((json) => {\n    //     //         this.setState({ game: json[\"-Ll2kMaVAN7LeHFGpO8f\"]}, this.setStory);\n    //     //     });\n\n    //     // getFirebase\n    //     //     .then((json) => {\n    //     //         this.setState({ game: json[\"-Ll2kMaVAN7LeHFGpO8f\"] }, this.setStory);\n    //     //     });\n\n    //     firebaseRef.child(\"games\").on('value', (snapshot) => {\n    //         let json = snapshot.val();\n    //         this.setState({ game: json[this.state.gameId] }, this.setStory);\n    //     });\n    // }\n\n    toggleTheme = () => this.setState(prevState => ({ inverted: !prevState.inverted }));\n    // called from welcome\n    setGameValues = (gameId, name) => this.setState({ gameIdUncleaned: gameId, name: name }, this.getGameData);\n    // called when creating a new game from story\n    setGameId = (gameId) => this.setState({ gameId: gameId });\n    // get game data, or create a new game if no game with the gameId exists\n    getGameData = () => {\n        firebaseRef.child(\"games\").once('value', (snapshot) => {\n            let json = snapshot.val();\n            console.log(json);\n            // console.log(json[this.state.gameIdUncleaned]);\n            // if no existing game exists with that name, create a new one\n            if (json === null || this.state.gameIdUncleaned === null || json[this.state.gameIdUncleaned] == null) {\n                this.createNewGame();\n            } else {\n                this.setState({ gameId: this.state.gameIdUncleaned }, () => {\n                    createUser(this.state.gameId, this.state.name);\n                });\n            }\n        });\n    }\n\n    createNewGame = () => {\n        createGame(this.state.name)\n            .then((gameId) => {\n                console.log('got game id: ' + gameId);\n                // update state and parent state with new randomly generated game id\n                this.setState({ gameId: gameId });\n            })\n            .catch(err => console.log('error: ' + err));\n    }\n\n    render() {\n        console.log(this.state);\n        return (\n            <Container>\n                <Grid verticalAlign='middle' columns={1} style={{minHeight:\"70vh\"}}>\n                    <Grid.Column>\n                        {this.state.gameId === null ? (\n                            <Welcome inverted={this.state.inverted} setGameValues={this.setGameValues} />\n                        )\n                            :\n                            (\n                                <Story inverted={this.state.inverted} gameId={this.state.gameId} name={this.state.name} setGameId={this.setGameId} />\n                            )}\n                        <Radio toggle onChange={this.toggleTheme} label=\"Dark Mode\" />\n                    </Grid.Column>\n                </Grid>\n\n            </Container>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport { Header, Icon, Menu, Modal } from 'semantic-ui-react';\n\nexport default class MenuBar extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            inverted: false,\n            visible: false,\n            modal: false\n        };\n    }\n\n    componentDidMount() {\n    }\n\n    refreshPage = () => window.location.reload();\n    openModal = () => this.setState({ modal: true });\n    closeModal = () => this.setState({ modal: false });\n\n    render() {\n        const { visible } = this.state;\n\n        return (\n            <div>\n                <Menu inverted={this.state.inverted} size='massive'>\n                    <Menu.Item name='Story Mania' onClick={this.refreshPage}/>\n                    <Menu.Menu position='right'>\n                        <Menu.Item name='About' onClick={this.openModal} ><Icon name='info circle' /></Menu.Item>\n                    </Menu.Menu>\n                </Menu>\n                <Modal open={this.state.modal} onClose={this.closeModal} >\n                    <Modal.Header>About this game</Modal.Header>\n                    <Modal.Content>\n                        <Modal.Description>\n                            <Header>Story Mania</Header>\n                            <p>asdfasdfadsf</p>\n                        </Modal.Description>\n                    </Modal.Content>\n                </Modal>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport 'semantic-ui-css/semantic.min.css'\nimport Home from './components/home';\nimport MenuBar from './components/menu';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MenuBar />\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const firebase = require('firebase');\n\nconst FirebaseConfig = {\n    apiKey: \"AIzaSyBVvoERxcerBb6M4lh2C3D-rZeYIKZUvjw\",\n    authDomain: \"react-game-78498.firebaseapp.com\",\n    databaseURL: \"https://react-game-78498.firebaseio.com\",\n    projectId: \"react-game-78498\",\n    storageBucket: \"react-game-78498.appspot.com\",\n    messagingSenderId: \"976787720562\",\n    appId: \"1:976787720562:web:2371c16988082bed\"\n}\n\nfirebase.initializeApp(FirebaseConfig);\nconst databaseRef = firebase.database().ref();\n\n// exports.getFirebase = new Promise((resolve, reject) => {\n//     databaseRef.child(\"games\").once(\"value\").then(function (dataSnapshot) {\n//         console.log(dataSnapshot.val());\n//         return resolve(dataSnapshot.val());\n//     }).catch((err) => {\n//         console.error('Firebase error:', err.message);\n//         reject('error occured');\n//     });\n// });\n\nexports.firebaseRef = databaseRef;\n\nexports.pushToFirebase = function (req, res) {\n    console.log(req.query);\n    databaseRef.child(\"todos\").push().set(req.query.item);\n    res.send(\"success\");\n}\n\n// create a new game with the specified name and return the id of the game\n// params: name\nexports.createGame = function (name) {\n    return new Promise(function (resolve, reject) {\n        let game = databaseRef.child(\"games\").push({ players: 1, turn: 0, users: { 0: { name: name }}}, (error) => {\n            if (error) reject(\"error: \" + error);\n        });\n        return resolve(game.key);\n    })\n};\n\n// params: gameId, user\nexports.createUser = function (gameId, user) {\n    //get number of players currently in game\n    let game = \"games/\" + gameId;\n    databaseRef.child(game + \"/players\").once(\"value\").then(function (dataSnapshot) {\n        console.log(dataSnapshot.val());\n        let dataJson = dataSnapshot.val();\n        let currentId = parseInt(dataJson) + 1;\n        // create user with unique id and increment number of players\n        databaseRef.child(game + \"/players\").set(currentId, (error) => {\n            if (error) return \"error: \" + error;\n        });\n        databaseRef.child(game + \"/users/\" + currentId).set({ name: user }, (error) => {\n            if (error) return \"error: \" + error;\n        });\n        return \"\" + currentId;\n    }).catch((err) => {\n        console.error('Firebase error:', err.message);\n    });;\n}\n\n// params: gameId, word\nexports.addWord = function (gameId, user, word) {\n    let words = \"games/\" + gameId + \"/story\";\n    databaseRef.child(words).push({ value: word, user: user });\n    return \"success\";\n}\n\nexports.getGame = function (gameId) {\n    return new Promise(function (resolve, reject) {\n        let gamePath = \"games/\" + gameId;\n        const databaseRef = firebase.database().ref(gamePath);\n        databaseRef.once(\"value\").then(function (dataSnapshot) {\n            resolve(dataSnapshot.val());\n        }).catch((err) => {\n            console.error('Firebase error:', err.message);\n            reject(err);\n        });\n    });\n}"],"sourceRoot":""}